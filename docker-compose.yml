# version: '3.8'

# services:
#   app:
#     build:
#       context: .
#       dockerfile: Dockerfile  
#     container_name: nodejs-app
#     environment:
#       - MONGO_URI=mongodb://mongo:27017/mydatabase
#     ports:
#       - "5000:5000"
#     depends_on:
#       - mongo
#     networks:
#       - app-network
#     volumes:
#       - .:/app

#   mongo:
#     image: mongo:latest
#     container_name: mongo-db
#     ports:
#       - "27018:27017"
#     networks:
#       - app-network
#     volumes:
#       - mongo-data:/data/db

#   nginx:
#     image: nginx:latest
#     container_name: nginx
#     volumes:
#       - .:/usr/share/nginx/html     # Mount entire project directory
#       # - ./public:/usr/share/nginx/html  # Remove this duplicate mount
#     ports:
#       - "8080:80"
#     depends_on:
#       - app
#     networks:
#       - app-network

# networks:
#   app-network:
#     driver: bridge

# volumes:
#   mongo-data:
#     driver: local
version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile  
    container_name: nodejs-app
    environment:
      - MONGO_URI=mongodb://mongo:27017/mydatabase
    ports:
      - "0.0.0.0:5000:5000"  # Bind to all interfaces, not just localhost
    depends_on:
      - mongo
    networks:
      - app-network
    volumes:
      - .:/app

  mongo:
    image: mongo:latest
    container_name: mongo-db
    ports:
      - "27018:27017"  # Expose MongoDB on a custom port for external access
    networks:
      - app-network
    volumes:
      - mongo-data:/data/db

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - .:/usr/share/nginx/html
    ports:
      - "0.0.0.0:8080:80"  # Ensure Nginx is also accessible on all interfaces
    depends_on:
      - app
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:  # Named volume for MongoDB data persistence
